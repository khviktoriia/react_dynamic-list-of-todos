{"version":3,"sources":["store/ActionTypes.ts","types/Status.ts","store/Store.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["ActionTypes","Status","initialState","currentTodo","status","All","query","reducer","state","action","type","ToggleTodoModal","payload","todo","ChangeStatus","ChangeQuery","StateContext","createContext","DispatchContext","StateProvider","children","useReducer","dispatch","Provider","value","TodoItem","memo","useContext","id","title","completed","className","classNames","onClick","TodoList","todos","map","TodoFilter","onChange","event","target","Active","Completed","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","loading","setLoading","user","setUser","useEffect","userId","finally","href","email","name","App","todosFromServer","setTodosFromServer","visibleTodos","useMemo","filter","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dbde506c.chunk.js","sourcesContent":["export enum ActionTypes {\n  'ToggleTodoModal' = 'toggleTodoModal',\n  'ChangeStatus' = 'changeStatus',\n  'ChangeQuery' = 'changeQuery',\n}\n","export enum Status {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React, { createContext, useReducer } from 'react';\nimport { Action } from './Action';\nimport { ActionTypes } from './ActionTypes';\nimport { Todo } from '../types/Todo';\nimport { Status } from '../types/Status';\n\ntype State = {\n  currentTodo: Todo | null;\n  status: Status;\n  query: string;\n};\n\nconst initialState: State = {\n  currentTodo: null,\n  status: Status.All,\n  query: '',\n};\n\nfunction reducer(state: State, action: Action): State {\n  const { currentTodo } = state;\n\n  switch (action.type) {\n    case ActionTypes.ToggleTodoModal:\n      return {\n        ...state,\n        currentTodo: currentTodo === null ? action.payload.todo : null,\n      };\n\n    case ActionTypes.ChangeStatus:\n      return {\n        ...state,\n        status: action.payload.status,\n      };\n\n    case ActionTypes.ChangeQuery:\n      return {\n        ...state,\n        query: action.payload.query,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport const StateContext = createContext(initialState);\n\nexport const DispatchContext = createContext<(action: Action) => void>(\n  () => {});\n\ntype Provider = {\n  children: React.ReactNode\n};\n\nexport const StateProvider: React.FC<Provider> = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <DispatchContext.Provider value={dispatch}>\n      <StateContext.Provider value={state}>\n        {children}\n      </StateContext.Provider>\n    </DispatchContext.Provider>\n  );\n};\n","import React, { memo, useContext } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { DispatchContext, StateContext } from '../../store/Store';\nimport { ActionTypes } from '../../store/ActionTypes';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoItem: React.FC<Props> = memo(({ todo }) => {\n  const dispatch = useContext(DispatchContext);\n  const { currentTodo } = useContext(StateContext);\n\n  const { id, title, completed } = todo;\n\n  const showTodo = () => {\n    dispatch({\n      type: ActionTypes.ToggleTodoModal,\n      payload: {\n        todo,\n      },\n    });\n  };\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={classNames({\n        'has-background-info-light': currentTodo?.id === id,\n      })}\n    >\n      <td className=\"is-vcentered\">{id}</td>\n\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={classNames({\n            'has-text-danger': !completed,\n            'has-text-success': completed,\n          })}\n        >\n          {title}\n        </p>\n      </td>\n\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={showTodo}\n        >\n          <span className=\"icon\">\n            <i\n              className={classNames('far', {\n                'fa-eye': currentTodo?.id !== id,\n                'fa-eye-slash': currentTodo?.id === id,\n              })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n});\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <TodoItem todo={todo} key={todo.id} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useContext } from 'react';\nimport { DispatchContext, StateContext } from '../../store/Store';\nimport { ActionTypes } from '../../store/ActionTypes';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter = () => {\n  const dispatch = useContext(DispatchContext);\n  const { status, query } = useContext(StateContext);\n\n  const changeStatus = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch({\n      type: ActionTypes.ChangeStatus,\n      payload: {\n        status: event.target.value as Status,\n      },\n    });\n  };\n\n  const changeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch({\n      type: ActionTypes.ChangeQuery,\n      payload: {\n        query: event.target.value,\n      },\n    });\n  };\n\n  const handleDeleteButtonClick = () => {\n    dispatch({\n      type: ActionTypes.ChangeQuery,\n      payload: {\n        query: '',\n      },\n    });\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={changeStatus}\n          >\n            <option value={Status.All}>All</option>\n            <option value={Status.Active}>Active</option>\n            <option value={Status.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={changeQuery}\n        />\n\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleDeleteButtonClick}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { DispatchContext } from '../../store/Store';\nimport { ActionTypes } from '../../store/ActionTypes';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo }) => {\n  const [loading, setLoading] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n  const dispatch = useContext(DispatchContext);\n\n  const { id, title, completed } = todo;\n\n  const close = () => {\n    dispatch({\n      type: ActionTypes.ToggleTodoModal,\n      payload: {\n        todo: null,\n      },\n    });\n  };\n\n  useEffect(() => {\n    setLoading(true);\n\n    getUser(todo.userId)\n      .then(setUser)\n      .finally(() => setLoading(false));\n  }, [todo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={close}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  useContext, useEffect, useMemo, useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { Loader } from './components/Loader';\nimport { StateContext } from './store/Store';\nimport { Status } from './types/Status';\n\nexport const App: React.FC = () => {\n  const [todosFromServer, setTodosFromServer] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const { currentTodo, status, query } = useContext(StateContext);\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos()\n      .then(setTodosFromServer)\n      .finally(() => setLoading(false));\n  }, []);\n\n  const visibleTodos = useMemo(\n    () => (\n      todosFromServer.filter(({ completed }: Todo) => {\n        switch (status) {\n          case Status.Active:\n            return !completed;\n          case Status.Completed:\n            return completed;\n          default:\n            return true;\n        }\n      })\n        .filter(({ title }: Todo) => (title.toLowerCase()\n          .includes(query.toLowerCase())))),\n    [status, todosFromServer, query],\n  );\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {loading && <Loader />}\n              <TodoList todos={visibleTodos} />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && (\n        <TodoModal todo={currentTodo} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { StateProvider } from './store/Store';\n\nReactDOM.render(\n  <StateProvider>\n    <App />\n  </StateProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}